{"version":3,"sources":["components/App.module.css","components/Contacts/ContactsFilter.module.css","components/Section/Section.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Contacts/ContactsFilter.js","components/Alert/Alert.js","actions/PhoneBook.js","constants/PhoneBook.js","components/App.js","reducers/PhoneBook.js","store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","Section","title","children","className","CSSTransition","appear","in","timeout","classNames","Form","onSubmit","useState","name","number","formState","setFormState","handleChange","e","target","value","reset","styles","form","preventDefault","label","input","type","onChange","pattern","required","button","Contacts","contacts","onDelete","TransitionGroup","map","i","id","unmountOnExit","onClick","ContactsFilter","Alert","visible","error","console","log","addContact","createAction","removeContact","filterContact","connect","state","items","phoneBook","filter","actions","setError","wrapper","find","contact","setTimeout","item","generate","container","normalizedFilter","toLowerCase","includes","sort","a","b","localeCompare","filterContacts","contactId","Boolean","initialState","parsed","JSON","parse","localStorage","getItem","length","getInitialContacts","phoneBookReducer","createReducer","builder","addCase","Actions","action","payload","configureStore","reducer","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1318a98f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2yUyk\",\"form-container\":\"App_form-container__GlJWT\",\"container\":\"App_container__1zkcA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactsFilter_label__2llwg\",\"input\":\"ContactsFilter_input__1yxti\"};","import { CSSTransition } from \"react-transition-group\";\nimport \"./styles.css\";\nexport default function Section({ title, children }) {\n  return (\n    <div className=\"container\">\n      <CSSTransition appear in timeout={500} classNames=\"title\">\n        <h2 className=\"title\">{title}</h2>\n      </CSSTransition>\n      {children}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Form.module.css\";\n\nconst Form = ({ onSubmit }) => {\n  const [formState, setFormState] = useState({ name: \"\", number: \"\" });\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, ...{ [e.target.name]: e.target.value } });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(formState);\n    reset();\n  };\n\n  const reset = () => {\n    setFormState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={formState.name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={formState.number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import PropTypes from \"prop-types\";\nimport \"./styles.css\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nconst Contacts = ({ contacts, onDelete }) => {\n  return (\n    <TransitionGroup className=\"list\">\n      {contacts.map(({ id, name, number }, i) => (\n        <CSSTransition key={i} timeout={500} classNames=\"item\" unmountOnExit>\n          <div className=\"item\" key={id}>\n            <p className=\"text\">{name} :</p>\n            <p className=\"text\">{number}</p>\n            <button className=\"button\" onClick={() => onDelete(id)}>\n              X\n            </button>\n          </div>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n\nexport default Contacts;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactsFilter.module.css\";\n\n\nconst ContactsFilter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nContactsFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ContactsFilter;\n","import React from \"react\";\nimport \"./styles.css\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst Alert = ({ visible, error }) => {\n  console.log(error);\n  return visible ? (\n    <CSSTransition appear in timeout={250} classNames=\"alert\">\n      <div className=\"alert\">{error}</div>\n    </CSSTransition>\n  ) : null;\n};\n\nexport default Alert;\n","import { createAction } from \"@reduxjs/toolkit\";\nimport * as PhoneBookActions from \"../constants/PhoneBook\";\n\nexport const addContact = createAction(PhoneBookActions.ADD_CONTACT);\nexport const removeContact = createAction(PhoneBookActions.REMOVE_CONTACT);\nexport const filterContact = createAction(PhoneBookActions.FILTER_CONTACT);\n","export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\";\nexport const FILTER_CONTACT = \"FILTER_CONTACTs\";\n","import React, { useState } from \"react\";\nimport { generate } from \"shortid\";\nimport styles from \"./App.module.css\";\nimport Section from \"./Section\";\nimport Form from \"./Form\";\nimport Contacts from \"./Contacts\";\nimport ContactsFilter from \"./Contacts/ContactsFilter\";\nimport Alert from \"./Alert\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/PhoneBook\";\n\nconst App = ({ items, filter, addContact, removeContact, filterContact }) => {\n  const [error, setError] = useState(\"\");\n\n  const addNewContact = ({ name, number }) => {\n    const isAlreadyExist = items.find(\n      (contact) => contact.name === name || contact.number === number\n    );\n    if (isAlreadyExist) {\n      setError(`${name} is already in contacts`);\n\n      setTimeout(() => {\n        setError(\"\");\n      }, 2000);\n    } else {\n      addContact({\n        item: {\n          id: generate(),\n          name,\n          number,\n        },\n      });\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    removeContact({ id: contactId });\n  };\n\n  const changeFilter = (e) => {\n    filterContact({ filter: e.target.value });\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return items\n      .filter((contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n      .sort((a, b) => a.name.localeCompare(b.name));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles[\"form-container\"]}>\n        <Section title={\"Phonebook\"}>\n          <Form onSubmit={addNewContact} />\n        </Section>\n\n        <Section>\n          <div className={styles.container}>\n            <ContactsFilter value={filter} onChange={changeFilter} />\n            <Contacts contacts={filterContacts()} onDelete={deleteContact} />\n          </div>\n        </Section>\n      </div>\n      <Alert visible={Boolean(error)} error={error} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  items: state.phoneBook.items,\n  filter: state.phoneBook.filter,\n});\n\nexport default connect(mapStateToProps, { ...actions })(App);\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport * as Actions from \"../actions/PhoneBook\";\nimport { generate } from \"shortid\";\n\nconst getInitialContacts = () => {\n  const parsed = JSON.parse(localStorage.getItem(\"contacts\") || \"[]\");\n  return parsed.length\n    ? parsed\n    : [\n        {\n          id: generate(),\n          name: \"Rosie Simpson\",\n          number: \"459-12-56\",\n        },\n        {\n          id: generate(),\n          name: \"Hermione Kline\",\n          number: \"443-89-12\",\n        },\n        {\n          id: generate(),\n          name: \"Eden Clements\",\n          number: \"645-17-79\",\n        },\n        {\n          id: generate(),\n          name: \"Annie Copeland\",\n          number: \"227-91-26\",\n        },\n      ];\n};\n\nconst initialState = {\n  items: getInitialContacts(),\n  filter: \"\",\n};\n\nconst phoneBookReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(Actions.addContact, (state, action) => {\n      state.items = [...state.items, action.payload.item];\n    })\n    .addCase(Actions.removeContact, (state, action) => {\n      state.items = [\n        ...state.items.filter((item) => item.id !== action.payload.id),\n      ];\n    })\n    .addCase(Actions.filterContact, (state, action) => {\n      state.filter = action.payload.filter;\n    });\n});\n\nexport default phoneBookReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from \"./reducers/PhoneBook\";\n\nexport default configureStore({\n  reducer: {\n    phoneBook: phoneBookReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport store from \"./store\";\nconsole.log(store);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__Cecan\",\"label\":\"Form_label__30uba\",\"input\":\"Form_input__3jd4G\",\"button\":\"Form_button__euUzh\"};"],"sourceRoot":""}